(preface:unless :t 1 2 (mu:fixnum+ 1 2))
(preface:unless :t 1)
(preface:unless :t)
(preface:when :t 1 2 (mu:fixnum+ 1 2))
(preface:when :t 1)
(preface:when :t)
(preface:append)
(preface:append ())
(preface:append 1)
(preface:append () 1)
(preface:append () ())
(preface:append () '(1 2 3) (mu:fixnum+ 1 2))
(core:eval ())
(core:eval 1)
(core:eval '(mu:fixnum+ 1 2))
(preface:format () "hello")
(preface:format () "hello ~A" 1)
(preface:format () "hello ~A" (mu:fixnum+ 1 1))
(preface:format () "hello ~A ~S" 1 (mu:fixnum+ 1 2))
(preface:funcall mu:fixnum+ 1 2)
(preface:let* ((a (mu:fixnum+ 1 2))) (mu:fixnum+ 1 a))
(preface:let* ((a 0)) (mu:fixnum+ 1 a))
(preface:let* ((a 0)) a)
(preface:let* ((a 1) (b (mu:fixnum+ a 2))) (mu:fixnum+ a b))
(preface:let* ((a 1) (b (mu:fixnum+ a 2))) b)
(preface:vector)
(preface:vector 1)
(preface:vector (mu:fixnum+ 1 1))
(preface:vector () "abc" 3)
(preface:apply mu:fixnum+ '(1 2))
(preface:apply mu:fixnum+ 1 '(2))
